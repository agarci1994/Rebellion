{"version":3,"sources":["services/http-common.js","components/UI/Nav.jsx","services/cloudinary.services.js","components/Sections/TotalImage.jsx","components/Sections/SizePicture.jsx","components/Sections/Pictures.jsx","components/Statistics.jsx","App.jsx","index.js"],"names":["axios","create","baseURL","process","withCredentials","useStyles","makeStyles","nav","backgroundColor","title","flexGrow","color","button","marginRight","borderRadius","Nav","classes","downloadCSV","a","get","then","response","data","catch","err","console","log","CSV","download","AppBar","className","position","Toolbar","src","alt","Typography","variant","Button","onClick","theme","root","marginLeft","margin","display","spacing","TotalImage","doughnutOptions","CircularProgress","height","options","maintainAspectRatio","totalImages","SizePicture","lineOptions","avgSize","Pictures","biggestPicture","smallestPicture","Statistic","useState","setData","setDoughnut","setLine","error","setError","useEffect","viewStatistic","createOptionsDoughnut","chart","labels","Object","keys","formats","datasets","values","hoverBackgroundColor","createOptionsLine","allSize","map","elm","idx","label","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","style","App","Statistics","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b8618643.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: `${process.env.REACT_APP_URL}`,\n    withCredentials: true\n});","import React from \"react\";\n\n// Services\nimport { getCSV } from \"../../services/cloudinary.services\";\n// NPM\nimport download from \"downloadjs\";\n// Material UI\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n// Styles\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n\nconst Nav = () => {\n  const classes = useStyles();\n\n  // Services\n  const downloadCSV = async () => {\n    try {\n      let CSV = await getCSV();\n      download(CSV, \"cloudinary.csv\", \"text/csv\");\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <div>\n      <AppBar className={classes.nav} position=\"static\">\n        <Toolbar>\n          <img className='logo' src=\"../../../logo.jpg\" alt=\"logo\" />\n          <Typography variant=\"h6\" className={classes.title}>\n            Welcome Rebel!\n          </Typography>\n          <Button className={classes.button} onClick={() => downloadCSV()}>Download CSV</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles({\n  nav: {\n    backgroundColor: \"white\",\n  },\n  title: {\n    flexGrow: 1,\n    color: \"black\",\n  },\n  button: {\n    marginRight: 15,\n    backgroundColor: '#f5ff00',\n    borderRadius: 7\n  }\n});\n\nexport default Nav\n","import axios from './http-common';\n\nexport const getStatistics = () => axios.get('/api/cloudinary/statistics').then(response => response.data).catch(err => console.log(err))\nexport const getCSV = () => axios.get('/api/cloudinary/csv').then(response => response.data).catch(err => console.log(err))\n","import React from \"react\";\n\n// NPM\nimport { Doughnut } from \"react-chartjs-2\";\n// Material UI\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n// Styles\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst TotalImage = ({ data, doughnutOptions }) => {\n  const classes = useStyles();\n\n  return (\n    <div className=\"main\">\n    \n      {!data && (\n        <div className={classes.root}>\n          <CircularProgress color=\"secondary\" />\n        </div>\n      )}\n\n      <div className=\"chart\">\n        <Doughnut\n          data={doughnutOptions}\n          height={300}\n          options={{ maintainAspectRatio: false }}\n        />\n      </div>\n      \n      {data && <h1 className=\"title\">Total images: {data.totalImages}</h1>}\n    </div>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginLeft: \"50%\",\n    margin: \"auto\",\n    display: \"flex\",\n    \"& > * + *\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n}));\n\nexport default TotalImage;\n","import React from \"react\";\n// NPM\nimport { Line } from \"react-chartjs-2\";\n\nconst SizePicture = ({ data, lineOptions }) => {\n  return (\n    <div className=\"content-size\">\n      <Line data={lineOptions} />\n      {data && <h1 className=\"text-size\">Avg: {data.avgSize} bytes</h1>}\n    </div>\n  );\n};\n\nexport default SizePicture;\n","import React from \"react\";\n\nconst Pictures = ({ data }) => {\n  return (\n    <div className=\"content-image\">\n      {data && (\n        <div>\n          <h1 className=\"title-img\">Biggest Picture:</h1>\n          <img src={data.biggestPicture} alt=\"the biggest picture\" />\n        </div>\n      )}\n      {data && (\n        <div>\n          <h1 className=\"title-img\">Smallest Picture:</h1>\n          <img src={data.smallestPicture} alt=\"the biggest picture\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Pictures;\n","import React, { useEffect, useState } from \"react\";\n\n// Services\nimport { getStatistics } from \"../services/cloudinary.services\";\n// Components\nimport TotalImage from \"./Sections/TotalImage\";\nimport SizePicture from \"./Sections/SizePicture\";\nimport Picture from \"./Sections/Pictures\";\n\nconst Statistic = () => {\n  // State\n  const [data, setData] = useState();\n  const [doughnutOptions, setDoughnut] = useState([]);\n  const [lineOptions, setLine] = useState([]);\n  const [error, setError] = useState();\n\n  useEffect(() => viewStatistic(), []);\n\n  // Configs Charts\n  const createOptionsDoughnut = (data) => {\n    const chart = {\n      labels: Object.keys(data.formats),\n      datasets: [\n        {\n          data: Object.values(data.formats),\n          backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#57d657\"],\n          hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#57d657\"],\n        },\n      ],\n    };\n    setDoughnut(chart);\n  };\n\n  const createOptionsLine = (data) => {\n    const chart = {\n      labels: data.allSize.map((elm, idx) => idx),\n      datasets: [\n        {\n          label: \"Size Picture\",\n          fill: false,\n          lineTension: 0.1,\n          borderColor: \"rgba(75,192,192,1)\",\n          borderCapStyle: \"butt\",\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"rgba(75,192,192,1)\",\n          pointBorderWidth: 1,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n          pointHoverBorderColor: \"rgba(220,220,220,1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: data.allSize,\n        },\n      ],\n    };\n    setLine(chart);\n  };\n\n  // Service\n  const viewStatistic = async () => {\n    try {\n      const data = await getStatistics();\n      createOptionsDoughnut(data);\n      createOptionsLine(data);\n      setData(data);\n    } catch (error) {\n      setError(\"Upps! I am a mistake, we will solve it as soon as possible\");\n    }\n  };\n\n  return (\n    <div className=\"margin\">\n      {error ? (\n        <h1 style={{color: \"white\"}}>{error}</h1>\n      ) : (\n        <>\n          <TotalImage data={data} doughnutOptions={doughnutOptions} />\n          <div className=\"content\">\n            <Picture data={data} />\n            {data && <SizePicture data={data} lineOptions={lineOptions} />}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Statistic;\n","import React from \"react\";\n\n// Components\nimport Nav from \"./components/UI/Nav\";\nimport Statistics from './components/Statistics'\n// CSS\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <div>\n      <Nav />\n      <Statistics />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}